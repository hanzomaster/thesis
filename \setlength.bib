@article{hu2021software,
	title={A Software Package for Generating Code Coverage Reports With Gcov},
	author={Hu Jr, Zhenmai},
	year={2021}
}

@inproceedings{li2011klover,
	title={KLOVER: A symbolic execution and automatic test generation tool for C++ programs},
	author={Li, Guodong and Ghosh, Indradeep and Rajan, Sreeranga P},
	booktitle={Computer Aided Verification: 23rd International Conference, CAV 2011, Snowbird, UT, USA, July 14-20, 2011. Proceedings 23},
	pages={609--615},
	year={2011},
	organization={Springer}
}

@INPROCEEDINGS{AS4UT,
	author={Huong, Tran Nguyen and Chung, Le Huu and Tung, Lam Nguyen and Tran, Hoang-Viet and Hung, Pham Ngoc},
	booktitle={2022 14th International Conference on Knowledge and Systems Engineering (KSE)}, 
	title={An Automated Stub Method for Unit Testing C/C++ Projects}, 
	year={2022},
	volume={},
	number={},
	pages={1-6},
	doi={10.1109/KSE56063.2022.9953784}
}

@article{TUNG2022106821,
	title = {An automated test data generation method for void pointers and function pointers in C/C++ libraries and embedded projects},
	journal = {Information and Software Technology},
	volume = {145},
	pages = {106821},
	year = {2022},
	issn = {0950-5849},
	doi = {https://doi.org/10.1016/j.infsof.2022.106821},
	url = {https://www.sciencedirect.com/science/article/pii/S0950584922000027},
	author = {Lam Nguyen Tung and Hoang-Viet Tran and Khoi Nguyen Le and Pham Ngoc Hung},
	keywords = {Automated test data generation, Concolic testing, Symbolic execution, Void pointer, Function pointer, VFP verification},
	abstract = {Automated test data generation for unit testing C/C++ functions using concolic methods is well-known for improving software quality while reducing human testing effort. However, there have been only a few researches related to generating test data for void pointers and function pointers which are commonly used in C/C++ libraries and embedded projects. This paper proposes a concolic-based method named VFP (Void and Function Pointers test data generation) to generate test data for void pointers and function pointers. The key idea of VFP method is to preprocess the source code of the project under test to find all possible types of void pointers and references of function pointers. These types and references are used in the initial test data generating phase of the concolic testing method. VFP method is implemented in VFP verification tool to test on various C/C++ libraries and embedded projects. The experimental results show that VFP significantly improves the coverage of the generated test data in comparison with existing methods.}
}


@InProceedings{Buckle:1998:StaticAnalysisofSafetyCriticalSoftwareTechniquesToolsandExperiences,
	author="Buckle, Graham",
	editor="Redmill, Felix and Anderson, Tom",
	title="Static Analysis of Safety Critical Software (Techniques, Tools, and Experiences)",
	booktitle="Industrial Perspectives of Safety--critical Systems",
	year="1998",
	publisher="Springer London",
	address="London",
	pages="150--168",
	isbn="978--1--4471--1534--2"
}

@article{WARD:1989:TheStaticAnalysisofSafetyCriticalSoftwareUsingMALPAS,
	title = {The Static Analysis of Safety Critical Software Using MALPAS},
	journal = {IFAC Proceedings Volumes},
	volume = {22},
	number = {19},
	pages = {91--96},
	year = {1989},
	note = {IFAC/IFIP Workshop on Safety of Computer Control Systems 1989 (SAFECOMP '89), Vienna, Austria, 5--7 December},
	issn = {1474--6670},
	doi = {https://doi.org/10.1016/S1474-6670(17)52801-3},
	author = {N.J. Ward},
	keywords = {Static Analysis, Software tools, programming languages, Verification, Formal Methods, Independent Assessment}
}

@article{Wichmann:1995:Industrialperspectiveonstaticanalysis,
	author = {Wichmann, B. and Canning, A.A. and Clutterbuck, D.L. and Winsborrow, L.A. and Ward, N.J. and Marsh, William},
	year = {1995},
	month = {04},
	pages = {69 - 75},
	title = {Industrial perspective on static analysis},
	volume = {10},
	journal = {Software Engineering Journal},
	doi = {10.1049/sej.1995.0010}
}

@INPROCEEDINGS{Kannavara:2015:Challengesandopportunitieswithconcolictesting,  
	author={R. {Kannavara} and C. J. {Havlicek} and B. {Chen} and M. R. {Tuttle} and K. {Cong} and S. {Ray} and F. {Xie}},  
	booktitle={2015 National Aerospace and Electronics Conference (NAECON)},   
	title={Challenges and opportunities with concolic testing},   
	year={2015},  
	volume={},  
	number={},  
	pages={374--378},  
	doi={10.1109/NAECON.2015.7443099}}

@inproceedings{Kim:2012:AScalableDistributedConcolicTestingApproachAnEmpiricalEvaluation,
	author = {Kim, Moonzoo and Kim, Yunho and Rothermel, Gregg},
	title = {A Scalable Distributed Concolic Testing Approach: An Empirical Evaluation},
	year = {2012},
	isbn = {9780769546704},
	publisher = {IEEE Computer Society},
	address = {USA},
	doi = {10.1109/ICST.2012.114},
	booktitle = {Proceedings of the 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation},
	pages = {340–349},
	numpages = {10},
	series = {ICST '12}
}

@inproceedings{Wang:2018:TowardsOptimalConcolicTesting,
	author = {Wang, Xinyu and Sun, Jun and Chen, Zhenbang and Zhang, Peixin and Wang, Jingyi and Lin, Yun},
	title = {Towards Optimal Concolic Testing},
	year = {2018},
	isbn = {9781450356381},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	doi = {10.1145/3180155.3180177},
	booktitle = {Proceedings of the 40th International Conference on Software Engineering},
	pages = {291–302},
	numpages = {12},
	location = {Gothenburg, Sweden},
	series = {ICSE '18}
}
@InProceedings{Sen:2011:ConcolicTestingandConstraintSatisfaction,
	author="Sen, Koushik",
	editor="Sakallah, Karem A.
	and Simon, Laurent",
	title="Concolic Testing and Constraint Satisfaction",
	booktitle="Theory and Applications of Satisfiability Testing - SAT 2011",
	year="2011",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="3--4",
	isbn="978--3--642--21581--0"
}

@inproceedings{Majumdar:2007:HybridConcolicTesting,
	author = {Majumdar, Rupak and Sen, Koushik},
	title = {Hybrid Concolic Testing},
	year = {2007},
	isbn = {0769528287},
	publisher = {IEEE Computer Society},
	address = {USA},
	doi = {10.1109/ICSE.2007.41},
	booktitle = {Proceedings of the 29th International Conference on Software Engineering},
	pages = {416–426},
	numpages = {11},
	keywords = {directed random testing, concolic testing.},
	series = {ICSE '07}
}

@InProceedings{Cadar:2005:ExecutionGeneratedTestCasesHowtoMakeSystemsCodeCrashItself,
	author="Cadar, Cristian
	and Engler, Dawson",
	editor="Godefroid, Patrice",
	title="Execution Generated Test Cases: How to Make Systems Code Crash Itself",
	booktitle="Model Checking Software",
	year="2005",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="2--23",
	isbn="978--3--540--31899--6"
}

@inbook{Larson:2003:HighCoverageDetectionofInputRelatedSecurityFacults,
	author = {Larson, Eric and Austin, Todd},
	title = {High Coverage Detection of Input--Related Security Facults},
	year = {2003},
	publisher = {USENIX Association},
	address = {USA},
	booktitle = {Proceedings of the 12th Conference on USENIX Security Symposium - Volume 12},
	pages = {9},
	numpages = {1}
}

@INPROCEEDINGS{AMethodForAutomatedUnitTestingOfCPrograms,  author={D. {Nguyen} and P. N. {Hung} and V. {Nguyen}},  booktitle={2016 3rd National Foundation for Science and Technology Development Conference on Information and Computer Science (NICS)},   title={A method for automated unit testing of C programs},   year={2016},  volume={},  number={},  pages={17--22},  doi={10.1109/NICS.2016.7725644}}

@article{SymbolicExecutionForSoftwareTestingThreeDecadesLater,
	author = {Cadar, Cristian and Sen, Koushik},
	title = {Symbolic Execution for Software Testing: Three Decades Later},
	year = {2013},
	issue_date = {February 2013},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {56},
	number = {2},
	issn = {0001--0782},
	doi = {10.1145/2408776.2408795},
	journal = {Commun. ACM},
	month = feb,
	pages = {82–90},
	numpages = {9}
}

@INPROCEEDINGS{HeuristicsForScalableDynamicTestGeneration,  author={J. {Burnim} and K. {Sen}},  booktitle={2008 23rd IEEE/ACM International Conference on Automated Software Engineering},   title={Heuristics for Scalable Dynamic Test Generation},   year={2008},  volume={},  number={},  pages={443--446},  doi={10.1109/ASE.2008.69}}

@InProceedings{PathCrawler,
	author="Williams, Nicky
	and Marre, Bruno
	and Mouy, Patricia
	and Roger, Muriel",
	editor="Dal Cin, Mario
	and Ka{\^a}niche, Mohamed
	and Pataricza, Andr{\'a}s",
	title="PathCrawler: Automatic Generation of Path Tests by Combining Static and Dynamic Analysis",
	booktitle="Dependable Computing - EDCC 5",
	year="2005",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="281--292",
	isbn="978--3--540--32019--7"
}



@article{EXE,
	author = {Cadar, Cristian and Ganesh, Vijay and Pawlowski, Peter M. and Dill, David L. and Engler, Dawson R.},
	title = {EXE: Automatically Generating Inputs of Death},
	year = {2008},
	issue_date = {December 2008},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {12},
	number = {2},
	issn = {1094--9224},
	doi = {10.1145/1455518.1455522},
	journal = {ACM Trans. Inf. Syst. Secur.},
	month = dec,
	articleno = {10},
	numpages = {38},
	keywords = {test case generation, dynamic analysis, symbolic execution, bug finding, constraint solving, attack generation}
}

@inproceedings{KLEE,
	author = {Cadar, Cristian and Dunbar, Daniel and Engler, Dawson},
	title = {KLEE: Unassisted and Automatic Generation of High--Coverage Tests for Complex Systems Programs},
	year = {2008},
	publisher = {USENIX Association},
	address = {USA},
	booktitle = {Proceedings of the 8th USENIX Conference on Operating Systems Design and Implementation},
	pages = {209–224},
	numpages = {16},
	location = {San Diego, California},
	series = {OSDI'08}
}

@inproceedings{SAGE,
	author = {Elkarablieh, Bassem and Godefroid, Patrice and Levin, Michael Y.},
	title = {Precise Pointer Reasoning for Dynamic Test Generation},
	year = {2009},
	isbn = {9781605583389},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	doi = {10.1145/1572272.1572288},
	booktitle = {Proceedings of the Eighteenth International Symposium on Software Testing and Analysis},
	pages = {129–140},
	numpages = {12},
	keywords = {software testing, automatic test generation, program verification, pointer reasoning},
	location = {Chicago, IL, USA},
	series = {ISSTA '09}
}

@InProceedings{AMemoryModelForStaticAnalysisOfCPrograms,
	author="Xu, Zhongxing
	and Kremenek, Ted
	and Zhang, Jian",
	editor="Margaria, Tiziana
	and Steffen, Bernhard",
	title="A Memory Model for Static Analysis of C Programs",
	booktitle="Leveraging Applications of Formal Methods, Verification, and Validation",
	year="2010",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="535--548",
	isbn="978--3--642--16558--0"
}



@INPROCEEDINGS{MAIST,  author={Y. {Kim} and D. {Lee} and J. {Baek} and M. {Kim}},  booktitle={2019 IEEE/ACM 41st International Conference on Software Engineering: Software Engineering in Practice (ICSE--SEIP)},   title={Concolic Testing for High Test Coverage and Reduced Human Effort in Automotive Industry},   year={2019},  volume={},  number={},  pages={151--160},  doi={10.1109/ICSE-SEIP.2019.00024}}

@book{SecureProgrammingWithStaticAnalysis,
	author = {Chess, Brian and West, Jacob},
	title = {Secure Programming with Static Analysis},
	year = {2007},
	isbn = {9780321424778},
	publisher = {Addison--Wesley Professional},
	edition = {First}
}

@inproceedings{ConcolicTesting,
	author = {Sen, Koushik},
	title = {Concolic Testing},
	year = {2007},
	isbn = {9781595938824},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	doi = {10.1145/1321631.1321746},
	booktitle = {Proceedings of the Twenty--Second IEEE/ACM International Conference on Automated Software Engineering},
	pages = {571–572},
	numpages = {2},
	keywords = {random testing, concolic testing, testing tools, explicit path model--checking, symbolic execution, testing C programs, data structure testing, unit testing},
	location = {Atlanta, Georgia, USA},
	series = {ASE '07}
}

@book{GiaoTrinhKiemThu,
	author={Phạm Ngọc Hùng and Trương Anh Hoàng and Đặng Văn Hưng},
	title={Giáo trình Kiểm thử phần mềm},
	year="2014",
	keywords = {vietnam},
	publisher = {NXB Đại học Quốc gia Hà Nội}
}

@inproceedings{DART,
	author = {Godefroid, Patrice and Klarlund, Nils and Sen, Koushik},
	title = {DART: Directed Automated Random Testing},
	year = {2005},
	isbn = {1595930566},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	doi = {10.1145/1065010.1065036},
	booktitle = {Proceedings of the 2005 ACM SIGPLAN Conference on Programming Language Design and Implementation},
	pages = {213–223},
	numpages = {11},
	keywords = {program verification, random testing, software testing, automated test generation, interfaces},
	location = {Chicago, IL, USA},
	series = {PLDI '05}
}

@inproceedings{CUTE,
	author = {Sen, Koushik and Marinov, Darko and Agha, Gul},
	title = {CUTE: A Concolic Unit Testing Engine for C},
	year = {2005},
	isbn = {1595930140},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	doi = {10.1145/1081706.1081750},
	booktitle = {Proceedings of the 10th European Software Engineering Conference Held Jointly with 13th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
	pages = {263–272},
	numpages = {10},
	keywords = {unit testing, explicit path model--checking, testing C programs, data structure testing, random testing, concolic testing},
	location = {Lisbon, Portugal},
	series = {ESEC/FSE--13}
}

@INPROCEEDINGS{FeedbackDirectedRandomTestGeneration,  author={C. {Pacheco} and S. K. {Lahiri} and M. D. {Ernst} and T. {Ball}},  booktitle={29th International Conference on Software Engineering (ICSE'07)},   title={Feedback--Directed Random Test Generation},   year={2007},  volume={},  number={},  pages={75--84},  doi={10.1109/ICSE.2007.37}}

@conference{AutomatedWhiteboxFuzzTesting,
	author = {Patrice Godefroid and Michael Y. Levin and David Molnarl}, 
	title = {Automated Whitebox Fuzz Testing},
	booktitle = {Proceedings of Network and DistributedSystems Security (NDSS 2008)}
}

@INPROCEEDINGS{TestDataGenerationForDerivedTypesInCProgram,  author={Z. {Wang} and X. {Yu} and T. {Sun} and G. {Pu} and Z. {Ding} and J. {Hu}},  booktitle={2009 Third IEEE International Symposium on Theoretical Aspects of Software Engineering},   title={Test Data Generation for Derived Types in C Program},   year={2009},  volume={},  number={},  pages={155--162},  doi={10.1109/TASE.2009.10}}

@article{SE,
	author = {King, James C.},
	title = {Symbolic Execution and Program Testing},
	year = {1976},
	issue_date = {July 1976},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {19},
	number = {7},
	issn = {0001--0782},
	doi = {10.1145/360248.360252},
	journal = {Commun. ACM},
	month = jul,
	pages = {385–394},
	numpages = {10},
	keywords = {program proving, program debugging, program verification, program testing, symbolic interpretation, symbolic execution}
}

@article{MAESTRO,
	title = {MAESTRO: Automated test generation framework for high test coverage and reduced human effort in automotive industry},
	journal = {Information and Software Technology},
	volume = {123},
	pages = {106221},
	year = {2020},
	issn = {0950--5849},
	doi = {https://doi.org/10.1016/j.infsof.2019.106221},
	author = {Yunho Kim and Dongju Lee and Junki Baek and Moonzoo Kim},
	keywords = {Automated test generation, Concolic testing, Fuzzing, Automotive software, Coverage testing}
}

@inproceedings{10.1145/1190216.1190226,
	author = {Godefroid, Patrice},
	title = {Compositional Dynamic Test Generation},
	year = {2007},
	isbn = {1595935754},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	doi = {10.1145/1190216.1190226},
	booktitle = {Proceedings of the 34th Annual ACM SIGPLAN--SIGACT Symposium on Principles of Programming Languages},
	pages = {47–54},
	numpages = {8},
	keywords = {scalability, software testing, automatic test generation, program verification, compositional program analysis},
	location = {Nice, France},
	series = {POPL '07}
}

@article{SMART,
	author = {Godefroid, Patrice},
	title = {Compositional Dynamic Test Generation},
	year = {2007},
	issue_date = {January 2007},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {42},
	number = {1},
	issn = {0362--1340},
	doi = {10.1145/1190215.1190226},
	journal = {SIGPLAN Not.},
	month = jan,
	pages = {47–54},
	numpages = {8},
	keywords = {compositional program analysis, scalability, software testing, program verification, automatic test generation}
}

@InProceedings{FANUT,
	author="Lavillonni{\`e}re, Eric
	and Mentr{\'e}, David
	and Cousineau, Denis",
	editor="Beyer, Dirk
	and Keller, Chantal",
	title="Fast, Automatic, and Nearly Complete Structural Unit--Test Generation Combining Genetic Algorithms and Formal Methods",
	booktitle="Tests and Proofs",
	year="2019",
	publisher="Springer International Publishing",
	address="Cham",
	pages="55--63",
	isbn="978--3--030--31157--5"
}

@article{SDART,
	author = {Nguyen, Duc--Anh and Huong, Tran Nguyen and Dinh, Hieu Vo and Hung, Pham Ngoc},
	title = {Improvements of Directed Automated Random Testing in Test Data Generation for C++ Projects},
	journal = {International Journal of Software Engineering and Knowledge Engineering},
	volume = {29},
	number = {09},
	pages = {1279--1312},
	year = {2019},
	doi = {10.1142/S0218194019500402}
}

@INPROCEEDINGS{CAUT,  author={T. {Sun} and Z. {Wang} and G. {Pu} and X. {Yu} and Z. {Qiu} and B. {Gu}},  booktitle={2009 Ninth International Conference on Quality Software},   title={Towards Scalable Compositional Test Generation},   year={2009},  volume={},  number={},  pages={353--358},  doi={10.1109/QSIC.2009.53}}

@INPROCEEDINGS{SAVIOR,  author={Y. {Chen} and P. {Li} and J. {Xu} and S. {Guo} and R. {Zhou} and Y. {Zhang} and T. {Wei} and L. {Lu}},  booktitle={2020 IEEE Symposium on Security and Privacy (SP)},   title={SAVIOR: Towards Bug--Driven Hybrid Testing},   year={2020},  volume={},  number={},  pages={1580--1596},  doi={10.1109/SP40000.2020.00002}}

@ARTICLE{Bird:1983:AutomaticGenerationOfRandomSelfCheckingTestCases,  author={D. L. {Bird} and C. U. {Munoz}},  journal={IBM Systems Journal},   title={Automatic generation of random self--checking test cases},   year={1983},  volume={22},  number={3},  pages={229--245},  doi={10.1147/sj.223.0229}}

@article{Csallner:2004:JCrasher:AnAutomaticRobustnessTesterForJava,
	author = {Csallner, Christoph and Smaragdakis, Yannis},
	title = {JCrasher: An Automatic Robustness Tester for Java},
	year = {2004},
	issue_date = {September 2004},
	publisher = {John Wiley &amp; Sons, Inc.},
	address = {USA},
	volume = {34},
	number = {11},
	issn = {0038--0644},
	doi = {10.1002/spe.602},
	journal = {Softw. Pract. Exper.},
	month = sep,
	pages = {1025–1050},
	numpages = {26},
	keywords = {random testing, java, state re--initialization, software testing, test case generation}
}

@inproceedings{Forrester:2000:AnEmpiricalStudyoftheRobustnessofWindowsNTApplicationsUsingRandomTesting,
	author = {Forrester, Justin E. and Miller, Barton P.},
	title = {An Empirical Study of the Robustness of Windows NT Applications Using Random Testing},
	year = {2000},
	publisher = {USENIX Association},
	address = {USA},
	booktitle = {Proceedings of the 4th Conference on USENIX Windows Systems Symposium - Volume 4},
	pages = {6},
	numpages = {1},
	location = {Seattle, Washington},
	series = {WSS'00}
}

@inproceedings{10.1145/229000.226317,
	author = {Offutt, A. Jefferson and Hayes, J. Huffman},
	title = {A Semantic Model of Program Faults},
	year = {1996},
	isbn = {0897917871},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	doi = {10.1145/229000.226317},
	booktitle = {Proceedings of the 1996 ACM SIGSOFT International Symposium on Software Testing and Analysis},
	pages = {195–200},
	numpages = {6},
	location = {San Diego, California, USA},
	series = {ISSTA '96}
}

@article{Offutt:1996:ASemanticModelofProgramFaults,
	author = {Offutt, A. Jefferson and Hayes, J. Huffman},
	title = {A Semantic Model of Program Faults},
	year = {1996},
	issue_date = {May 1996},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {21},
	number = {3},
	issn = {0163--5948},
	doi = {10.1145/226295.226317},
	journal = {SIGSOFT Softw. Eng. Notes},
	month = may,
	pages = {195–200},
	numpages = {6}
}

@InProceedings{Pacheco:2005:Eclat:AutomaticGenerationandClassificationofTestInputs,
	author="Pacheco, Carlos
	and Ernst, Michael D.",
	editor="Black, Andrew P.",
	title="Eclat: Automatic Generation and Classification of Test Inputs",
	booktitle="ECOOP 2005 - Object--Oriented Programming",
	year="2005",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="504--527",
	isbn="978--3--540--31725--8"
}

@article{10.1145/566171.566191,
	author = {Boyapati, Chandrasekhar and Khurshid, Sarfraz and Marinov, Darko},
	title = {Korat: Automated Testing Based on Java Predicates},
	year = {2002},
	issue_date = {July 2002},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {27},
	number = {4},
	issn = {0163--5948},
	doi = {10.1145/566171.566191},
	journal = {SIGSOFT Softw. Eng. Notes},
	month = jul,
	pages = {123–133},
	numpages = {11}
}

@inproceedings{Boyapati:2002:Korat:AutomatedTestingBasedonJavaPredicates,
	author = {Boyapati, Chandrasekhar and Khurshid, Sarfraz and Marinov, Darko},
	title = {Korat: Automated Testing Based on Java Predicates},
	year = {2002},
	isbn = {1581135629},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	doi = {10.1145/566172.566191},
	booktitle = {Proceedings of the 2002 ACM SIGSOFT International Symposium on Software Testing and Analysis},
	pages = {123–133},
	numpages = {11},
	location = {Roma, Italy},
	series = {ISSTA '02}
}

% @article{10.1145/566171.566190,
% author = {Grieskamp, Wolfgang and Gurevich, Yuri and Schulte, Wolfram and Veanes, Margus},
% title = {Generating Finite State Machines from Abstract State Machines},
% year = {2002},
% issue_date = {July 2002},
% publisher = {Association for Computing Machinery},
% address = {New York, NY, USA},
% volume = {27},
% number = {4},
% issn = {0163--5948},
% doi = {10.1145/566171.566190},
% journal = {SIGSOFT Softw. Eng. Notes},
% month = jul,
% pages = {112–122},
% numpages = {11},
% keywords = {ASM, executable specification, test case generation, finite state machine, FSM, abstract state machine}
% }

% @inproceedings{Grieskamp:2002:GeneratingFiniteStateMachinesfromAbstractStateMachines,
% author = {Grieskamp, Wolfgang and Gurevich, Yuri and Schulte, Wolfram and Veanes, Margus},
% title = {Generating Finite State Machines from Abstract State Machines},
% year = {2002},
% isbn = {1581135629},
% publisher = {Association for Computing Machinery},
% address = {New York, NY, USA},
% doi = {10.1145/566172.566190},
% booktitle = {Proceedings of the 2002 ACM SIGSOFT International Symposium on Software Testing and Analysis},
% pages = {112–122},
% numpages = {11},
% keywords = {finite state machine, ASM, test case generation, executable specification, abstract state machine, FSM},
% location = {Roma, Italy},
% series = {ISSTA '02}
% }

@inproceedings{Xie:2004:Rostra:AFrameworkforDetectingRedundantObjectOrientedUnitTests,
	author = {Xie, Tao and Marinov, Darko and Notkin, David},
	title = {Rostra: A Framework for Detecting Redundant Object--Oriented Unit Tests},
	year = {2004},
	isbn = {0769521312},
	publisher = {IEEE Computer Society},
	address = {USA},
	booktitle = {Proceedings of the 19th IEEE International Conference on Automated Software Engineering},
	pages = {196–205},
	numpages = {10},
	series = {ASE '04}
}

@techreport{Ball:2003:AbstractionGuidedTestGeneration,
	author = {Ball, Thomas},
	title = {Abstraction--guided Test Generation: A Case Study},
	year = {2003},
	month = {November},
	pages = {14},
	number = {MSR--TR--2003--86},
}

@inproceedings{Beyer:2004:GeneratingTestsfromCounterexamples,
	author = {Beyer, Dirk and Chlipala, Adam J. and Henzinger, Thomas A. and Jhala, Ranjit and Majumdar, Rupak},
	title = {Generating Tests from Counterexamples},
	year = {2004},
	isbn = {0769521630},
	publisher = {IEEE Computer Society},
	address = {USA},
	booktitle = {Proceedings of the 26th International Conference on Software Engineering},
	pages = {326–335},
	numpages = {10},
	series = {ICSE '04}
}

@inproceedings{10.1145/1007512.1007526,
	author = {Visser, Willem and Pundefinedsundefinedreanu, Corina S. and Khurshid, Sarfraz},
	title = {Test Input Generation with Java PathFinder},
	year = {2004},
	isbn = {1581138202},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	doi = {10.1145/1007512.1007526},
	booktitle = {Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis},
	pages = {97–107},
	numpages = {11},
	keywords = {symbolic execution, model checking, coverage, testing object--oriented programs, red--black trees},
	location = {Boston, Massachusetts, USA},
	series = {ISSTA '04}
}

@article{Visser:2004:TestInputGenerationwithJavaPathFinder,
	author = {Visser, Willem and Pundefinedsundefinedreanu, Corina S. and Khurshid, Sarfraz},
	title = {Test Input Generation with Java PathFinder},
	year = {2004},
	issue_date = {July 2004},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	volume = {29},
	number = {4},
	issn = {0163--5948},
	doi = {10.1145/1013886.1007526},
	journal = {SIGSOFT Softw. Eng. Notes},
	month = jul,
	pages = {97–107},
	numpages = {11},
	keywords = {red--black trees, model checking, symbolic execution, coverage, testing object--oriented programs}
}

@InProceedings{Xie:2005:Symstra:AFrameworkforGeneratingObjectOrientedUnitTestsUsingSymbolicExecution,
	author="Xie, Tao
	and Marinov, Darko
	and Schulte, Wolfram
	and Notkin, David",
	editor="Halbwachs, Nicolas
	and Zuck, Lenore D.",
	title="Symstra: A Framework for Generating Object--Oriented Unit Tests Using Symbolic Execution",
	booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
	year="2005",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="365--381",
	isbn="978--3--540--31980--1"
}

@inproceedings{Csallner:2005:ChecknCrashCombiningStaticCheckingandTesting,
	author = {Csallner, Christoph and Smaragdakis, Yannis},
	title = {Check 'n' Crash: Combining Static Checking and Testing},
	year = {2005},
	isbn = {1581139632},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	doi = {10.1145/1062455.1062533},
	booktitle = {Proceedings of the 27th International Conference on Software Engineering},
	pages = {422–431},
	numpages = {10},
	keywords = {usability, extended static checking, dynamic analysis, static analysis, test case generation, automatic testing},
	location = {St. Louis, MO, USA},
	series = {ICSE '05}
}

@article{Grigorenko:1998:DynamicTesting,
	author = {Grigorenko, Elena and Sternberg, Robert},
	year = {1998},
	month = {07},
	pages = {75--111},
	title = {Dynamic Testing},
	volume = {124},
	journal = {Psychological Bulletin},
	doi = {10.1037/0033-2909.124.1.75}
}

@book{ref-constraints,
	added-at = {2011--04--29T00:00:00.000+0200},
	author = {Tsang, Edward P. K.},
	biburl = {https://www.bibsonomy.org/bibtex/2c95cf0f17353260ec7cfa8693b4cbdd0/dblp},
	interhash = {88505a85d88434f53859c89f5a039d88},
	intrahash = {c95cf0f17353260ec7cfa8693b4cbdd0},
	isbn = {978--0--12--701610--8},
	keywords = {dblp},
	%   pages = {I--XVIII, 1--421},
	publisher = {Academic Press},
	series = {Computation in cognitive science},
	timestamp = {2011--04--30T11:32:27.000+0200},
	title = {Foundations of constraint satisfaction.},
	year = 1993
}

@article{plauger1997embedded,
	title={Embedded C++: An Overview},
	author={Plauger, Philip J},
	journal={Embedded Systems Programming},
	volume={10},
	pages={40--53},
	year={1997},
	publisher={MILLER FREEMAN INC.}
}

@book{ehman2017power,
	title={The Power of C++},
	author={Ehman, Ashley},
	year={2017},
	publisher={Cavendish Square Publishing, LLC}
}

@article{ali2017iso,
	title={ISO 26262 functional safety standard and the impact in software lifecycle},
	author={Ali, Alabbas Alhaj},
	journal={J. Univ. Appl. Sci},
	year={2017}
}

@article{dugalic2012iso,
	title={ISO Software Quality Standards and Certification.},
	author={Dugalic, Bisera and Mishev, Anastas},
	year={2012}
}

@phdthesis{Hillenbrand2012_1000025616,
	author       = {Hillenbrand, Martin},
	year         = {2012},
	title        = {Funktionale Sicherheit nach ISO 26262 in der Konzeptphase der Entwicklung von Elektrik/Elektronik Architekturen von Fahrzeugen},
	doi          = {10.5445/KSP/1000025616},
	publisher    = {{KIT Scientific Publishing}},
	isbn         = {978-3-86644-803-2},
	issn         = {2191-4737},
	series       = {Steinbuch Series on Advances in Information Technology / Karlsruher Institut für Technologie, Institut für Technik der Informationsverarbeitung},
	abstract     = {Die Entwicklung von softwarebasierten Fahrzeugsystemen unter Befolgung des neuen Standards IO 26262 erfordert ein gemeinsames Verständnis sowie die Verzahnung des Vorgehens in beiden Domänen. Ziel dieser Arbeit ist die Berücksichtigung von Anforderungen der funktionalen Sicherheit während der Modellierung von Elektrik/Elektronik Architekturen, ihre formale Zuteilung zu Modellinhalten sowie die Unterstützung nebenläufiger und nachfolgender Aktivitäten der Fahrzeugentwicklung.},
	keywords     = {Elektrik/Elektronik Architektur, ISO 26262, Funktionale Sicherheit, Fragestellungsgraphen},
	pagetotal    = {398},
	language     = {german},
	volume       = {4}
}

@book{ref-constraints,
	added-at = {2011--04--29T00:00:00.000+0200},
	author = {Tsang, Edward P. K.},
	biburl = {https://www.bibsonomy.org/bibtex/2c95cf0f17353260ec7cfa8693b4cbdd0/dblp},
	interhash = {88505a85d88434f53859c89f5a039d88},
	intrahash = {c95cf0f17353260ec7cfa8693b4cbdd0},
	isbn = {978--0--12--701610--8},
	keywords = {dblp},
	publisher = {Academic Press},
	series = {Computation in cognitive science},
	timestamp = {2011--04--30T11:32:27.000+0200},
	title = {Foundations of constraint satisfaction.},
	year = 1993
}
 